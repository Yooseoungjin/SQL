ALTER USER TEST DEFAULT TABLESPACE USERS;
ALTER USER TEST TEMPORARY TABLESPACE TEMP;
GRANT UNLIMITED TABLEPLACE TO TEST;
ALTER USER TEST ACCOUNT UNLOCK;
GRANT CONNECT, RESOURCE, UNLIMITED TABLESPACE TO TEST;
-- 상위 심멘토님께서 알려주신거

GRANT (CONNECT, RESOURCE, UNLIMITED TABLESPACE) TO BANK IDENTIFIED BY 111111;

--BANK라는 유저에게 테이블스페이스 무제한 줌
grant unlimited tablespace to BANK;
grant connect, resource to BANK;

ALTER USER BANK DEFAULT TABLESPACE test2;
ALTER USER BANK TEMPORARY TABLESPACE system;

alter user BANK quota 50M on system;

CREATE TABLE TEST(
	DEPTNO NUMBER(2) CONSTRAINT PK_DEPT PRIMARY KEY,
	DNAME VARCHAR2(14),
	LOC VARCHAR2(13)
);

SELECT * FROM EMP;

UPDATE EMP 

SELECT * FROM SALGRADE;

CREATE TABLE BONUS (
	ENAME VARCHAR2(10),
	JOB VARCHAR2(9),
	SAL NUMBER,
	COMM NUMBER
);

SELECT *
FROM V$SQLFN_METADATA V
WHERE V.NAME = 'NVL';

SELECT ENAME,UPPER(ENAME),LOWER(ENAME)  
FROM EMP;

SELECT *  
FROM EMP
WHERE UPPER(ENAME) = UPPER('SCOtt');

SELECT CONCAT(EMPNO,ENAME)  
FROM EMP;

--LPAD, RPAD 문자열을 채우기하는 함수
SELECT LPAD('ORA_1234_XE',20) AS LPAD_20
	  ,RPAD('ORA_1234_XE',20) AS RPAD_20
FROM DUAL;

SELECT SUM(NULL)
FROM DUAL;

--숫자 함수
SELECT ROUND(3.1428,3) AS PI0
,ROUND(123.456789,3) AS ROUND1
,TRUNC(123.456789,2) AS TRUNC1 
,TRUNC(-123.456789,2) AS TRUNC2
,CEIL(3.14) AS CEIL0
,FLOOR(3.54) AS FLOOR1  
,MOD(15,6) AS MOD1
,MOD(11,1) AS MOD2
,MOD(5,3) AS MOD3
,REMAINDER(5,3) AS REM 
,POWER(2,10)  
FROM DUAL;

--날짜 함수
SELECT (SYSDATE - 2022-12-31) AS NOW
,2022-12-31,SYSDATE 
FROM DUAL;

SELECT ADD_MONTHS(SYSDATE,:MONTH)
FROM DUAL;

SELECT ROUND((SYSDATE-HIREDATE)) AS 근속일수
,ROUND((SYSDATE-HIREDATE)/365) AS 근속년수
,MONTHS_BETWEEN(HIREDATE,SYSDATE) /12 AS Year1
,trunc(MONTHS_BETWEEN(SYSDATE,HIREDATE) /12) AS Year3
FROM EMP;

SELECT ENAME,HIREDATE ,SYSDATE 
,MONTHS_BETWEEN(HIREDATE,SYSDATE) /12 AS Year1
,trunc(MONTHS_BETWEEN(SYSDATE,HIREDATE) /12) AS Year3
FROM EMP;

SELECT LAST_DAY(SYSDATE)
,NEXT_DAY(SYSDATE,'월요일') AS 다음_월요일
,TO_CHAR(EXTRACT (YEAR FROM SYSDATE)) 
FROM DUAL;

SELECT SYSDATE
,ROUND(SYSDATE,'YYYY')
,ROUND(SYSDATE,'Q')
,trunc(SYSDATE,'Q')
,ROUND(SYSDATE,'DDD')
,trunc(SYSDATE,'DDD')
,ROUND(SYSDATE,'HH')
FROM DUAL;

SELECT 
TO_CHAR(SYSDATE,'YYYY/MM/DD HH24')AS 년월일_시간 --년월일자 24시 표시
,TO_CHAR(SYSDATE,'DD HH24:MI:SS')AS 일자_시간 --일자 시분초 표시
FROM DUAL;

SELECT TO_CHAR(SYSDATE,'MON','NLS_DATE_LANGUAE=KOREAN') AS KO
FROM DUAL;

SELECT TO_DATE('49/12/10', 'YY/MM/DD') AS YY_YEAR_49
,TO_DATE('49/12/10', 'RR/MM/DD') AS RR_YEAR_49
,TO_DATE('50/12/10', 'YY/MM/DD') AS YY_YEAR_49
,TO_DATE('50/12/10', 'RR/MM/DD') AS RR_YEAR_49
,TO_DATE('51/12/10', 'YY/MM/DD') AS YY_YEAR_49
,TO_DATE('51/12/10', 'RR/MM/DD') AS RR_YEAR_49
FROM DUAL;

SELECT EMPNO 
,SAL*12+NVL(COMM,0) AS 연봉
,JOB
,TO_CHAR(HIREDATE,'YYYY-MM-DD') AS 입사일자
FROM EMP
ORDER BY 연봉 DESC;



--롤업 실습-------------------------------------------------------
SELECT DEPTNO ,JOB,COUNT(*),MAX(SAL),MIN(SAL),SUM(SAL),AVG(SAL)
FROM EMP
GROUP BY ROLLUP (DEPTNO,JOB);
------------------------------
SELECT
    DEPTNO
    ,GROUPING(DEPTNO) AS D_no
    ,JOB
    ,GROUPING(JOB) AS J_no
    ,SUM(SAL)
FROM EMP
GROUP BY ROLLUP(DEPTNO, JOB);
-------------------------------
SELECT
    DEPTNO
    ,JOB
    ,GROUPING(DEPTNO) AS D_no
    ,GROUPING(JOB) AS J_no
    ,GROUPING_ID(DEPTNO, JOB) G_no
    ,SUM(SAL)
FROM EMP
GROUP BY ROLLUP(DEPTNO, JOB);
-------------------------------
SELECT
    DEPTNO
    ,JOB
    ,SUM(SAL)
FROM EMP
GROUP BY ROLLUP(1,DEPTNO, JOB);
-------------------------------
SELECT
    DEPTNO
    ,JOB
    ,GROUPING(1) AS "1"
    ,GROUPING(DEPTNO) AS D_no
    ,GROUPING(2) AS "2"
    ,GROUPING(JOB) AS J_no
    ,GROUPING_ID(1,DEPTNO, 2,JOB) G_no
    ,SUM(SAL)
FROM EMP
GROUP BY ROLLUP(1,DEPTNO, 2,JOB);
-----------------------------------
SELECT
    DEPTNO
    ,JOB
    ,GROUPING(1) AS "1"
    ,GROUPING(DEPTNO) AS D_no
    ,GROUPING(JOB) AS J_no
    ,GROUPING_ID(1,DEPTNO, JOB) G_no
    ,SUM(SAL)
FROM EMP
GROUP BY ROLLUP(1,DEPTNO,JOB);
-----------------------------------
SELECT
    DECODE(
        GROUPING_ID(1, DEPTNO, 2, JOB)
        ,7, '전체'
        ,15, '전체'
        ,DEPTNO
    ) AS DEPTNO
    ,DECODE(
        GROUPING_ID(1, DEPTNO, 2, JOB)
        ,1, '합계'
        ,3, '평균'
        ,7, '합계'
        ,15, '평균'
        ,JOB
    ) AS JOB
    ,DECODE(
        GROUPING_ID(1, DEPTNO, 2, JOB)
        ,3, ROUND(AVG(SAL))
        ,15, ROUND(AVG(SAL))
        ,SUM( SAL)
    ) AS SAL
FROM EMP
GROUP BY ROLLUP(1,DEPTNO, 2, JOB);
---------------------------------------
SELECT
    DECODE(
        GROUPING_ID(DEPTNO,JOB)
        ,1, '소계'
        ,3, '합계'
        ,DEPTNO
    ) AS DEPTNO
    ,DECODE(
        GROUPING_ID(DEPTNO,JOB)
        ,1, '소계'
        ,3, '합계'
        ,JOB
    ) AS JOB
     ,SUM( SAL)
      AS SAL
FROM EMP
GROUP BY ROLLUP(DEPTNO,JOB);
